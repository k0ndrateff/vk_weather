import React from "react";
import {
    Cell,
    FormItem,
    FormLayout, Group,
    Input, List,
    ModalPage,
    ModalPageHeader, ModalRoot,
    PanelHeaderClose,
    PanelHeaderSubmit
} from "@vkontakte/vkui";

type CityModalProps = {
    activeModal: string;
    modalBack: () => void;
    city: string | null;
    setCity: () => void;
    updateGeoData: (string) => void;
};

const CityModal:React.FC<CityModalProps> = ({ activeModal, modalBack, city, setCity, updateGeoData }) => {
    return (
        <ModalRoot
            activeModal={activeModal}
            onClose={modalBack}
        >
            <ModalPage
                id='chooseCity'
                onClose={modalBack}
                header={
                    <ModalPageHeader
                        before={<PanelHeaderClose onClick={modalBack}/>}
                        after={<PanelHeaderSubmit onClick={() => updateGeoData(city)}/>}
                    >
                        –í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥
                    </ModalPageHeader>
                }
            >
                <FormLayout>
                    <FormItem top='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ'>
                        <Input id='city' placeholder={city} onChange={(st) => setCity(st)} />
                    </FormItem>
                </FormLayout>
                <Group>
                    <List>
                        <Cell onClick={() => { updateGeoData() }}>üè† –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è</Cell>
                        <Cell onClick={() => { updateGeoData('–ú–æ—Å–∫–≤–∞') }}>üè∞ –ú–æ—Å–∫–≤–∞</Cell>
                        <Cell onClick={() => { updateGeoData('–ü–∞—Ä–∏–∂') }}>üó∫ –ü–∞—Ä–∏–∂</Cell>
                        <Cell onClick={() => { updateGeoData('–ù—å—é-–ô–æ—Ä–∫') }}>üóΩ –ù—å—é-–ô–æ—Ä–∫</Cell>
                    </List>
                </Group>
            </ModalPage>
        </ModalRoot>
    );
};
export default CityModal;