{"version":3,"sources":["WeatherData.js","App.js","index.js"],"names":["WeatherData","props","state","error","isLoaded","temperature","city","feels_like","dt","lat","long","bridge","send","then","data","fetch","res","json","result","setState","main","temp","name","catch","console","log","message","this","date","Date","day","getDate","month","getMonth","hours","getHours","time","className","style","display","alignItems","flexDirection","size","margin","React","Component","App","promoBannerProps","activePanel","id","bannerData","ReactDOM","render","document","getElementById"],"mappings":"wNAiFeA,E,kDA1EX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,YAAa,EACbC,KAAM,GACNC,WAAY,GACZC,GAAI,GARS,E,qDAYnB,WAAqB,IAAD,OACZC,EAAM,EACNC,EAAO,EACXC,IACKC,KAAK,sBACLC,MAAK,SAAAC,GACFL,EAAMK,EAAKL,IACXC,EAAOI,EAAKJ,KACZK,MAAM,uDAAwDN,EAAK,QAAUC,EAAO,gEAC/EG,MAAK,SAAAG,GAAG,OAAIA,EAAIC,UAChBJ,MACD,SAACK,GACG,EAAKC,SAAS,CACVf,UAAU,EACVC,YAAaa,EAAOE,KAAKC,KACzBf,KAAMY,EAAOI,KACbf,WAAYW,EAAOE,KAAKb,WACxBC,GAAIU,EAAOV,QAGnB,SAACL,GACG,EAAKgB,SAAS,CACVf,UAAU,EACVD,gBAKfoB,OAAM,SAAApB,GACHqB,QAAQC,IAAItB,EAAMuB,c,oBAI5B,WAAU,IAAD,EACwDC,KAAKzB,MAA5DC,EADD,EACCA,MAAOC,EADR,EACQA,SAAUC,EADlB,EACkBA,YAAmBE,GADrC,EAC+BD,KAD/B,EACqCC,YAAYC,EADjD,EACiDA,GAEpDoB,EAAO,IAAIC,KAAU,IAALrB,GAChBsB,EAAMF,EAAKG,UACXC,EAAQJ,EAAKK,WACbC,EAAQN,EAAKO,WACbC,EAAO,iCAEX,OADIF,GAAS,GAAME,EAAO,iCAAoBF,GAAS,GAAOE,EAAO,6CAAsBF,GAAS,KAAME,EAAO,4BAC7GjC,EACK,sEAAcA,EAAMuB,SACjBtB,EAQR,6BACI,wBAAIiC,UAAU,YAAd,8CAAkCD,EAAlC,IAAwC,0BAAMC,UAAU,aAAaP,EAA7B,IAlBjC,CAAC,uCAAU,6CAAW,iCAAS,uCAAU,qBAAO,2BAAQ,2BAAQ,6CAAW,mDAAY,6CAAW,uCAAU,8CAkBjCE,KAClF,wBAAIK,UAAU,QAAQhC,EAAtB,cACA,wBAAIgC,UAAU,aAAd,6EAAyC9B,EAAzC,eATJ,yBAAK+B,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAClE,kBAAC,IAAD,CAASC,KAAK,QAAQJ,MAAO,CAAEK,OAAQ,iB,GA5D3BC,IAAMC,WC4BjBC,E,kDA3Bd,WAAY7C,GAAQ,IAAD,8BACZ,cAAMA,IACDC,MAAQ,CACX6C,mCAHU,E,qDAOnB,WAAqB,IAAD,OACnBpC,IAAOC,KAAK,kBACPC,MAAK,SAACkC,GACH,EAAK5B,SAAS,CAAE4B,0B,oBAIzB,WACC,OACC,kBAAC,IAAD,CAAMC,YAAY,QACjB,kBAAC,IAAD,CAAOC,GAAG,QACP,kBAAC,IAAD,6CACA,kBAAC,EAAD,MACEtB,KAAKzB,MAAM6C,kBAAoB,kBAAC,IAAD,CAAaG,WAAavB,KAAKzB,MAAM6C,yB,GArB3DH,IAAMC,WCAxBlC,IAAOC,KAAK,gBAEZuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ccf2a383.chunk.js","sourcesContent":["import React from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport { Spinner } from '@vkontakte/vkui';\r\nimport { Icon28LocationOutline } from '@vkontakte/icons';\r\n\r\nclass WeatherData extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          error: null,\r\n          isLoaded: false,\r\n          temperature: 0,\r\n          city: \"\",\r\n          feels_like: \"\",\r\n          dt: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lat = 0;\r\n        let long = 0;\r\n        bridge\r\n            .send('VKWebAppGetGeodata')\r\n            .then(data => {\r\n                lat = data.lat;\r\n                long = data.long;\r\n                fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+ lat +\"&lon=\" + long + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\r\n                    .then(res => res.json())\r\n                    .then(\r\n                    (result) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            temperature: result.main.temp,\r\n                            city: result.name,\r\n                            feels_like: result.main.feels_like,\r\n                            dt: result.dt\r\n                        });\r\n                    },\r\n                    (error) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error\r\n                    });\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n      }\r\n    \r\n      render() {\r\n        const { error, isLoaded, temperature, city, feels_like, dt } = this.state;\r\n        const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\r\n        let date = new Date(dt * 1000);\r\n        let day = date.getDate();\r\n        let month = date.getMonth();\r\n        let hours = date.getHours();\r\n        let time = 'утром';\r\n        if (hours >= 23) { time = 'ночью' } else if ( hours >= 18 ) { time = 'вечером' } else if ( hours >= 12) { time = 'днём' }\r\n        if (error) {\r\n          return <div>Ошибка: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n          return (\r\n            <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n              <Spinner size=\"large\" style={{ margin: '20px 0' }} />\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div>\r\n                <h2 className='dayMonth'>Сегодня {time} <span className='fadedText'>{day} {months[month]}</span></h2>\r\n                <h3 className='temp'>{temperature}°С</h3>\r\n                <h3 className='feelsLike'>Ощущается как {feels_like}°С</h3>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n}\r\n\r\nexport default WeatherData;","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { View, Panel, PanelHeader, PromoBanner } from '@vkontakte/vkui';\nimport WeatherData from './WeatherData';\n\nclass App extends React.Component {\n\tconstructor(props) {\n        super(props);\n        this.state = {\n          promoBannerProps\n        };\n    }\n\n\tcomponentDidMount() {\n\t\tbridge.send('VKWebAppGetAds')\n    \t\t.then((promoBannerProps) => {\n        \t\tthis.setState({ promoBannerProps });\n    \t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel=\"main\">\n\t\t\t\t<Panel id=\"main\">\n\t\t\t\t\t  <PanelHeader>Погода</PanelHeader>\n\t\t\t\t\t  <WeatherData></WeatherData>\n\t\t\t\t\t  { this.state.promoBannerProps && <PromoBanner bannerData={ this.state.promoBannerProps } /> }\n\t\t\t\t</Panel>\n\t\t  </View>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}