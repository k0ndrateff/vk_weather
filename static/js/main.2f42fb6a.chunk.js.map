{"version":3,"sources":["DailyForecast.js","App.js","index.js"],"names":["DailyForecast","props","className","this","weather","dt","temp","day","React","Component","App","goBack","history","state","pop","activePanel","length","bridge","send","setState","goForward","push","error","isLoaded","temperature","city","feels_like","other","forecast","lat","long","then","data","fetch","res","json","result","main","name","description","daily","catch","console","log","message","platform","date","Date","getDate","month","getMonth","hours","getHours","time","feeling","Math","round","fore_weather","map","onSwipeBack","id","left","autoplay","loop","src","style","height","width","onClick","mode","label","undefined","pressure","humidity","wind","deg","speed","clouds","all","display","alignItems","flexDirection","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f42fb6a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass DailyForecast extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"forecast\">\r\n                <p>{this.props.weather.dt}</p>\r\n                <p>{this.props.weather.temp.day}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyForecast;","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { View, Panel, PanelHeader, Spinner, Group, CellButton, PanelHeaderBack, Header, SimpleCell, InfoRow, Tooltip } from '@vkontakte/vkui';\nimport {  Icon28ErrorCircleOutline } from '@vkontakte/icons';\nimport { Player } from '@lottiefiles/react-lottie-player';\nimport DailyForecast from './DailyForecast';\n\nclass App extends React.Component {\n\tconstructor(props) {\n        super(props);\n\t\tthis.state = {\n\t\t\terror: null,\n\t\t\tisLoaded: false,\n\t\t\ttemperature: 0,\n\t\t\tcity: \"\",\n\t\t\tfeels_like: \"\",\n\t\t\tdt: 0,\n\t\t\tweather: \"\",\n\t\t\tother: '',\n\t\t\tforecast: '',\n\t\t\tactivePanel: 'main',\n\t\t\thistory: ['main']\n\t\t  };\n    }\n\n\tcomponentDidMount() {\n\t\tlet lat = 0;\n        let long = 0;\n        bridge\n            .send('VKWebAppGetGeodata')\n            .then(data => {\n                lat = data.lat;\n                long = data.long;\n                fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+ lat +\"&lon=\" + long + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\n                    .then(res => res.json())\n                    .then(\n                    (result) => {\n                        this.setState({\n                            temperature: result.main.temp,\n                            city: result.name,\n                            feels_like: result.main.feels_like,\n                            dt: result.dt,\n                            weather: result.weather[0].description,\n\t\t\t\t\t\t\tother: result\n                        });\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            error\n                    \t});\n                    }\n                )\n\t\t\t\tfetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\"+ lat +\"&lon=\" + long + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\n                    .then(res => res.json())\n                    .then(\n                    (result) => {\n                        this.setState({\n                            isLoaded: true,\n                            forecast: result.daily\n                        });\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            error\n                    \t});\n                    }\n                )\n            })\n            .catch(error => {\n                console.log(error.message);\n            });\n\t}\n\t\n\tgoBack = () => {\n\t\tconst history = [...this.state.history];\n\t\thistory.pop();\n\t\tconst activePanel = history[history.length - 1];\n\t\tif (activePanel === 'main') {\n\t\t  bridge.send('VKWebAppEnableSwipeBack');\n\t\t}\n\t\tthis.setState({ history, activePanel });\n\t}\n\t\n\tgoForward = (activePanel) => {\n\t\tconst history = [...this.state.history];\n\t\thistory.push(activePanel);\n\t\tif (this.state.activePanel === 'main') {\n\t\t  bridge.send('VKWebAppDisableSwipeBack');\n\t\t}\n\t\tthis.setState({ history, activePanel });\n\t}\n\n\trender() {\n\t\tconst { platform } = this.props;\n\t\tconst { error, isLoaded, temperature, city, feels_like, dt, weather, other, forecast } = this.state;\n        const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\n        let date = new Date(dt * 1000);\n        let day = date.getDate();\n        let month = date.getMonth();\n        let hours = date.getHours();\n        let time = 'утром';\n\t\tlet feeling = Math.round(feels_like);\n        if (hours >= 23 || hours <= 4) { time = 'ночью' } else if ( hours >= 18 ) { time = 'вечером' } else if ( hours >= 12) { time = 'днём' }\n\t\tlet fore_weather = forecast.map((day) =>\n\t\t\t<DailyForecast weather={day} />\n\t\t);\n\t\tif (error) {\n\t\t\treturn (\n\t\t\t\t<View \n\t\t\t\t\tonSwipeBack={this.goBack}\n\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\tactivePanel={this.state.activePanel}\n\t\t\t\t>\n\t\t\t\t\t<Panel id='main'>\n\t\t\t\t\t\t<PanelHeader left={<Icon28ErrorCircleOutline />}>Ошибка</PanelHeader>\n\t\t\t\t\t\t<div>{error.message}</div>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t);} \n\t\telse if (!isLoaded) {\n\t\t\treturn (\n\t\t\t\t<View \n\t\t\t\t\tonSwipeBack={this.goBack}\n\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\tactivePanel={this.state.activePanel}\n\t\t\t\t>\n\t\t\t\t\t<Panel id='main'>\n\t\t\t\t\t\t<PanelHeader>Загрузка...</PanelHeader>\n\t\t\t  \t\t\t<div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n\t\t\t\t\t\t  \t<Player\n  \t\t\t\t\t\t\t\tautoplay\n  \t\t\t\t\t\t\t\tloop\n  \t\t\t\t\t\t\t\tsrc=\"https://assets4.lottiefiles.com/packages/lf20_Cemmpu.json\"\n  \t\t\t\t\t\t\t\tstyle={{ height: '300px', width: '300px' }}\n\t\t\t\t\t\t  \t>\n\t\t\t\t\t\t\t</Player>\n\t\t\t  \t\t\t</div>\n\t\t\t  \t\t</Panel>\n\t\t\t  \t</View>\n\t\t\t);} \n\t\telse {\n\t\t\treturn (\n\t\t\t\t<View \n\t\t\t\t\tonSwipeBack={this.goBack}\n\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\tactivePanel={this.state.activePanel}\n\t\t\t\t>\n\t\t\t\t\t<Panel id=\"main\">\n\t\t\t\t\t  \t<PanelHeader>{city}</PanelHeader>\n\t\t\t\t\t  \t<div>\n\t\t\t\t\t\t\t<div className='main-weather'>\n\t\t\t\t\t\t\t\t<h2 className='dayMonth'>Сегодня {time} <span className='fadedText'>{day} {months[month]}</span></h2>\n\t\t\t\t\t\t\t\t<div className='inline-temp'>\n\t\t\t\t\t\t\t\t\t<h3 className='temp'>{temperature}°С</h3>\n\t\t\t\t\t\t\t\t\t<Player\n\t\t\t\t\t\t\t\t\t\tautoplay\n\t\t\t\t\t\t\t\t\t\tloop\n\t\t\t\t\t\t\t\t\t\tsrc='https://assets10.lottiefiles.com/temp/lf20_WtPCZs.json'\n\t\t\t\t\t\t\t\t\t\tstyle={{height: '100px', width: '100px'}}\n\t\t\t\t\t\t\t\t\t></Player>\n\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t<h3 className='feelsLike'>Ощущается как {feeling}°С</h3>\n                \t\t\t\t<h3 className='weatherName'>На улице {weather}</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Group>\n              \t\t\t\t\t<CellButton onClick={ () => this.goForward('more_weather') }>\n                \t\t\t\t\tЕщё о погоде\n              \t\t\t\t\t</CellButton>\n            \t\t\t\t</Group>\n\t\t\t\t\t\t\t<Group>\n\t\t\t\t\t\t\t\t<Header mode='secondary'>Прогноз на завтра</Header>\n\t\t\t\t\t\t\t\t{fore_weather}\n\t\t\t\t\t\t\t</Group>\n            \t\t\t</div>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel id='more_weather'>\n\t\t\t\t\t\t<PanelHeader\n              \t\t\t\tleft={<PanelHeaderBack  onClick={() => this.goBack()} label={platform === 'VKCOM' ? 'Назад' : undefined} />}\n            \t\t\t>\n              \t\t\t\tТекущая погода\n            \t\t\t</PanelHeader>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Город: {city}</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Погода: {weather}</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Температура: {temperature}°С</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Ощущается как: {feels_like}°С</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Давление: {other.main.pressure} гПа</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Влажность: {other.main.humidity}%</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Ветер: {other.wind.deg}° {other.wind.speed} м/с</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Облачность: {other.clouds.all}%</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Panel>\n\t\t  \t\t</View>\n\t\t\t);}\n\t}\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}