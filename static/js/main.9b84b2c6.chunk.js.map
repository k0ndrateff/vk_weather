{"version":3,"sources":["WeatherData.js","App.js","index.js"],"names":["WeatherData","props","state","error","isLoaded","temperature","timezone","feels_like","lat","long","bridge","send","then","data","fetch","res","json","result","setState","current","temp","catch","console","log","message","this","React","Component","App","activePanel","id","ReactDOM","render","document","getElementById"],"mappings":"wNA6DeA,E,kDAzDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,YAAa,EACbC,SAAU,GACVC,WAAY,IAPC,E,qDAWnB,WAAqB,IAAD,OACZC,EAAM,EACNC,EAAO,EACXC,IACKC,KAAK,sBACLC,MAAK,SAAAC,GACFL,EAAMK,EAAKL,IACXC,EAAOI,EAAKJ,KACZK,MAAM,uDAAyDN,EAAM,QAAUC,EAAO,gEACjFG,MAAK,SAAAG,GAAG,OAAIA,EAAIC,UAChBJ,MACD,SAACK,GACG,EAAKC,SAAS,CACVd,UAAU,EACVC,YAAaY,EAAOE,QAAQC,KAC5Bd,SAAUW,EAAOX,SACjBC,WAAYU,EAAOE,QAAQZ,gBAGnC,SAACJ,GACG,EAAKe,SAAS,CACVd,UAAU,EACVD,gBAKfkB,OAAM,SAAAlB,GACHmB,QAAQC,IAAIpB,EAAMqB,c,oBAI5B,WAAU,IAAD,EACwDC,KAAKvB,MAA5DC,EADD,EACCA,MAAOC,EADR,EACQA,SAAUC,EADlB,EACkBA,YAAaC,EAD/B,EAC+BA,SAAUC,EADzC,EACyCA,WAChD,OAAIJ,EACK,sEAAcA,EAAMqB,SACjBpB,EAIR,oGAAmBE,EAAnB,yEAA4CD,EAA5C,qGAA6EE,EAA7E,cAHK,wF,GAjDSmB,IAAMC,WCejBC,EAXH,WACX,OACC,kBAAC,IAAD,CAAMC,YAAY,QACX,kBAAC,IAAD,CAAOC,GAAG,QACP,kBAAC,IAAD,6CACA,kBAAC,EAAD,SCNZpB,IAAOC,KAAK,gBAEZoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9b84b2c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nclass WeatherData extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          error: null,\r\n          isLoaded: false,\r\n          temperature: 0,\r\n          timezone: \"\",\r\n          feels_like: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lat = 0;\r\n        let long = 0;\r\n        bridge\r\n            .send('VKWebAppGetGeodata')\r\n            .then(data => {\r\n                lat = data.lat;\r\n                long = data.long;\r\n                fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + lat + \"&lon=\" + long + \"&lang=ru&units=metric&appid=e937bb61987a79d09b7604a3375a9941\")\r\n                    .then(res => res.json())\r\n                    .then(\r\n                    (result) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            temperature: result.current.temp,\r\n                            timezone: result.timezone,\r\n                            feels_like: result.current.feels_like\r\n                        });\r\n                    },\r\n                    (error) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error\r\n                    });\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n      }\r\n    \r\n      render() {\r\n        const { error, isLoaded, temperature, timezone, feels_like } = this.state;\r\n        if (error) {\r\n          return <div>Ошибка: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n          return <div>Загрузка...</div>;\r\n        } else {\r\n          return (\r\n            <h1>Часовой пояс: {timezone}, температура: {temperature}°С, чувствуется как {feels_like}°С</h1>\r\n          );\r\n        }\r\n      }\r\n}\r\n\r\nexport default WeatherData;","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { View, Panel, PanelHeader } from '@vkontakte/vkui';\nimport WeatherData from './WeatherData';\n\n\nconst App = () => {\n\treturn (\n\t\t<View activePanel=\"main\">\n        \t<Panel id=\"main\">\n          \t\t<PanelHeader>Погода</PanelHeader>\n          \t\t<WeatherData></WeatherData>\n        \t</Panel>\n      </View>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}