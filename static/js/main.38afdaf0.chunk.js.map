{"version":3,"sources":["img/loading.svg","LaterBox.js","App.js","index.js"],"names":["LaterBox","props","getTime","dt","date","Date","hour","getHours","minute","getMinutes","state","weather","this","className","temp","React","Component","App","goBack","history","pop","activePanel","length","bridge","send","setState","goForward","push","modalBack","setActiveModal","modalHistory","activeModal","indexOf","splice","toNormalDate","getDate","getMonth","time","string","updateGeoData","city","fetch","then","res","json","result","lat","lon","error","isLoaded","forecast","daily","slice","hourly","long","data","error_type","catch","modal","onClose","id","header","left","onClick","right","document","getElementById","value","top","placeholder","name","onSwipeBack","message","Math","round","main","feels_like","description","src","LoadingImage","ReactDOM","render"],"mappings":"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","file":"static/js/main.38afdaf0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.8a1887f1.svg\";","import React from 'react';\r\n\r\nclass LaterBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dt: this.props.dt,\r\n            weather: this.props.weather\r\n        };\r\n    }\r\n\r\n    getTime = (dt) => {\r\n        let date = new Date(dt * 1000);\r\n        let hour = date.getHours();\r\n        let minute = date.getMinutes();\r\n        let res = {\r\n            hour: hour,\r\n            minute: minute\r\n        }\r\n        return res;\r\n    }\r\n\r\n    render() {\r\n        const {dt, weather} = this.state;\r\n\r\n        return (\r\n            <div className=\"currentWrap\">\r\n                <div className=\"laterBoxes\">\r\n                    <div className=\"laterBox\">\r\n                        <h3 className='laterTemp'>{weather[1].temp}</h3>\r\n                        <h3 className='laterTime'>{this.getTime(weather[1].dt).hour}:{this.getTime(weather[1].dt).minute}</h3>\r\n                    </div>\r\n                    <div className=\"laterBox\">\r\n                        <h3 className='laterTemp'>{weather[1].temp}</h3>\r\n                        <h3 className='laterTime'>{this.getTime(weather[1].dt).hour}:{this.getTime(weather[1].dt).minute}</h3>\r\n                    </div>\r\n                    <div className=\"laterBox\">\r\n                        <h3 className='laterTemp'>{weather[1].temp}</h3>\r\n                        <h3 className='laterTime'>{this.getTime(weather[1].dt).hour}:{this.getTime(weather[1].dt).minute}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LaterBox;","import React from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { Panel, View, ModalRoot, ModalPage, ModalPageHeader, PanelHeaderClose, PanelHeaderSubmit, FormItem, Input, FormLayout } from '@vkontakte/vkui';\r\n\r\nimport LoadingImage from './img/loading.svg';\r\nimport LaterBox from './LaterBox';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            weather: '',\r\n            forecast: '',\r\n            hourly: '',\r\n            activePanel: 'main',\r\n            history: ['main'],\r\n            activeModal: null,\r\n            modalHistory: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lat = 0;\r\n        let long = 0;\r\n        bridge.send('VKWebAppGetGeodata')\r\n                .then(data => {\r\n                    if (data.error_type == 'client_error') {\r\n                        lat = 30;\r\n                        long = 50;\r\n                    }\r\n                    else {\r\n                        lat = data.lat;\r\n                        long = data.long;\r\n                    }\r\n                    fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+ lat +\"&lon=\" + long + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\r\n                        .then(res => res.json())\r\n                        .then((result) => {\r\n                            this.setState({ \r\n                                weather: result\r\n                            });\r\n                        },\r\n                        (error) => {\r\n                            this.setState({\r\n                                isLoaded: true,\r\n                                error\r\n                            });\r\n                        })\r\n                    fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\"+ lat +\"&lon=\" + long + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\r\n                        .then(res => res.json())\r\n                        .then((result) => {\r\n                            this.setState({\r\n                                isLoaded: true,\r\n                                forecast: result.daily.slice(1),\r\n                                hourly: result.hourly\r\n                            });\r\n                        },\r\n                        (error) => {\r\n                            this.setState({\r\n                                isLoaded: true,\r\n                                error\r\n                            });\r\n                        }\r\n                    )\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ \r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                });\r\n    }\r\n\r\n    goBack = () => {\r\n\t\tconst history = [...this.state.history];\r\n\t\thistory.pop();\r\n\t\tconst activePanel = history[history.length - 1];\r\n\t\tif (activePanel === 'main') {\r\n\t\t  bridge.send('VKWebAppEnableSwipeBack');\r\n\t\t}\r\n\t\tthis.setState({ history, activePanel });\r\n\t}\r\n\t\r\n\tgoForward = (activePanel) => {\r\n\t\tconst history = [...this.state.history];\r\n\t\thistory.push(activePanel);\r\n\t\tif (this.state.activePanel === 'main') {\r\n\t\t  bridge.send('VKWebAppDisableSwipeBack');\r\n\t\t}\r\n\t\tthis.setState({ history, activePanel });\r\n\t}\r\n\r\n    modalBack = () => {\r\n        this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n    };\r\n\r\n    setActiveModal = (activeModal) => {\r\n        activeModal = activeModal || null;\r\n        let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n    \r\n        if (activeModal === null) {\r\n          modalHistory = [];\r\n        } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n          modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n        } else {\r\n          modalHistory.push(activeModal);\r\n        }\r\n    \r\n        this.setState({\r\n          activeModal,\r\n          modalHistory\r\n        });\r\n    };\r\n\r\n    toNormalDate = (dt) => {\r\n        const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\r\n        let date = new Date(dt * 1000);\r\n        let day = date.getDate();\r\n        let month = date.getMonth();\r\n        return day + ' ' + months[month];\r\n    }\r\n\r\n    getTime = (dt) => {\r\n        let date = new Date(dt * 1000);\r\n        let hour = date.getHours();\r\n        let minute = date.getMinutes();\r\n        let time = 'утром';\r\n        if (hour < 5 || hour > 22) { time = 'ночью' } else if (hour > 18) { time = 'вечером' } else if (hour > 10) { time = 'днём' }\r\n        let res = {\r\n            time: hour + ':' + minute,\r\n            string: time\r\n        }\r\n        return res\r\n    }\r\n\r\n    updateGeoData = (city) => {\r\n        this.modalBack();\r\n        fetch('https://api.openweathermap.org/geo/1.0/direct?q=' + city + '&appid=e937bb61987a79d09b7604a3375a9941')\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+ result[0].lat +\"&lon=\" + result[0].lon + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                        this.setState({ \r\n                            weather: result\r\n                        });\r\n                    },\r\n                    (error) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error\r\n                    });\r\n                })\r\n                fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\"+ result[0].lat +\"&lon=\" + result[0].lon + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            forecast: result.daily.slice(1),\r\n                            hourly: result.hourly\r\n                        });\r\n                    },\r\n                    (error) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error\r\n                    });\r\n            }\r\n        )\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, weather, hourly } = this.state;\r\n\r\n        const modal = (\r\n            <ModalRoot\r\n                activeModal={this.state.activeModal}\r\n                onClose={this.modalBack}\r\n            >\r\n                <ModalPage\r\n                    id='chooseCity'\r\n                    onClose={this.modalBack}\r\n                    header={\r\n                        <ModalPageHeader\r\n                          left={<PanelHeaderClose onClick={this.modalBack}/>}\r\n                          right={<PanelHeaderSubmit onClick={() => {\r\n                                if (document.getElementById('city') != null) {\r\n                                    this.updateGeoData(document.getElementById('city').value);\r\n                                }  \r\n                          }}/>}\r\n                        >\r\n                          Выбрать город\r\n                        </ModalPageHeader>\r\n                      }\r\n                >\r\n                    <FormLayout>\r\n                        <FormItem top='Введите название'>\r\n                            <Input id='city' placeholder={weather.name} />\r\n                        </FormItem>\r\n                    </FormLayout> \r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        if (error) {\r\n            return (\r\n                <View\r\n                    onSwipeBack={this.goBack}\r\n                    history={this.state.history}\r\n                    activePanel={this.state.activePanel}\r\n                >\r\n                    <Panel id='main'>\r\n                        <div className='mainGradient'>\r\n                            <h1>Ошибка :(</h1>\r\n                            <p>{error.message}</p>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n            );}\r\n        else if (!isLoaded) {\r\n            return (\r\n                <View\r\n                    onSwipeBack={this.goBack}\r\n                    history={this.state.history}\r\n                    activePanel={this.state.activePanel}\r\n                >\r\n                    <Panel id='main'>\r\n                        <div className='mainGradient'>\r\n                            <h1 className='loadingText'>Загрузка...</h1>\r\n                            <img src={LoadingImage} />\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n            );}\r\n        else {\r\n            return (\r\n                <View \r\n\t\t\t\t\tonSwipeBack={this.goBack}\r\n\t\t\t\t\thistory={this.state.history}\r\n\t\t\t\t\tactivePanel={this.state.activePanel}\r\n                    modal={modal}\r\n\t\t\t\t>\r\n                    <Panel id='main'>\r\n                        <div className='mainGradient'>\r\n                            <div className='cityWrap'>\r\n                                <h1 className='city' onClick={() => this.setActiveModal('chooseCity')}>{weather.name}</h1>\r\n                            </div>\r\n                            <div className='currentWrap'>\r\n                                <div className='today'>\r\n                                    <h1 className='todayString'>Сейчас</h1>\r\n                                    <h1 className='todayDate'>{this.toNormalDate(weather.dt)}</h1>\r\n                                </div>\r\n                                <h2 className='mainTemp'>{Math.round(weather.main.temp)}°C</h2>\r\n                                <h3 className='mainFeels'>Ощущается как {Math.round(weather.main.feels_like)}°C</h3>\r\n                                <h4 className='mainWeather'>На улице {weather.weather[0].description}</h4>\r\n                            </div>\r\n                            <LaterBox dt={weather.dt} weather={hourly} />\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}