{"version":3,"sources":["App.js","index.js"],"names":["App","props","goBack","history","state","pop","activePanel","length","bridge","send","setState","goForward","push","error","isLoaded","temperature","city","feels_like","dt","weather","lat","long","then","data","fetch","res","json","result","main","temp","name","description","catch","console","log","message","this","date","Date","day","getDate","month","getMonth","hours","getHours","time","onSwipeBack","id","left","className","onClick","label","platform","VKCOM","undefined","style","display","alignItems","flexDirection","size","margin","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81790478.chunk.js","sourcesContent":["import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { View, Panel, PanelHeader, Spinner, Group, CellButton, PanelHeaderBack } from '@vkontakte/vkui';\nimport {  Icon24PlaceOutline, Icon28ErrorCircleOutline, Icon24Spinner } from '@vkontakte/icons';\n\nclass App extends React.Component {\n\tconstructor(props) {\n        super(props);\n\t\tthis.state = {\n\t\t\terror: null,\n\t\t\tisLoaded: false,\n\t\t\ttemperature: 0,\n\t\t\tcity: \"\",\n\t\t\tfeels_like: \"\",\n\t\t\tdt: 0,\n\t\t\tweather: \"\",\n\t\t\tactivePanel: 'main',\n\t\t\thistory: ['main']\n\t\t  };\n    }\n\n\tcomponentDidMount() {\n\t\tlet lat = 0;\n        let long = 0;\n        bridge\n            .send('VKWebAppGetGeodata')\n            .then(data => {\n                lat = data.lat;\n                long = data.long;\n                fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+ lat +\"&lon=\" + long + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\n                    .then(res => res.json())\n                    .then(\n                    (result) => {\n                        this.setState({\n                            isLoaded: true,\n                            temperature: result.main.temp,\n                            city: result.name,\n                            feels_like: result.main.feels_like,\n                            dt: result.dt,\n                            weather: result.weather[0].description\n                        });\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            error\n                    \t});\n                    }\n                )\n            })\n            .catch(error => {\n                console.log(error.message);\n            });\n\t}\n\t\n\tgoBack = () => {\n\t\tconst history = [...this.state.history];\n\t\thistory.pop();\n\t\tconst activePanel = history[history.length - 1];\n\t\tif (activePanel === 'main') {\n\t\t  bridge.send('VKWebAppEnableSwipeBack');\n\t\t}\n\t\tthis.setState({ history, activePanel });\n\t}\n\t\n\tgoForward = (activePanel) => {\n\t\tconst history = [...this.state.history];\n\t\thistory.push(activePanel);\n\t\tif (this.state.activePanel === 'main') {\n\t\t  bridge.send('VKWebAppDisableSwipeBack');\n\t\t}\n\t\tthis.setState({ history, activePanel });\n\t}\n\n\trender() {\n\t\tconst { error, isLoaded, temperature, city, feels_like, dt, weather } = this.state;\n        const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\n        let date = new Date(dt * 1000);\n        let day = date.getDate();\n        let month = date.getMonth();\n        let hours = date.getHours();\n        let time = 'утром';\n        if (hours >= 23 || hours <= 4) { time = 'ночью' } else if ( hours >= 18 ) { time = 'вечером' } else if ( hours >= 12) { time = 'днём' }\n\t\tif (error) {\n\t\t\treturn (\n\t\t\t\t<View \n\t\t\t\t\tonSwipeBack={this.goBack}\n\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\tactivePanel={this.state.activePanel}\n\t\t\t\t>\n\t\t\t\t\t<Panel id='main'>\n\t\t\t\t\t\t<PanelHeader left={<Icon28ErrorCircleOutline />}>Ошибка</PanelHeader>\n\t\t\t\t\t\t<div>{error.message}</div>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t);} \n\t\telse if (!isLoaded) {\n\t\t\treturn (\n\t\t\t\t<View \n\t\t\t\t\tonSwipeBack={this.goBack}\n\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\tactivePanel={this.state.activePanel}\n\t\t\t\t>\n\t\t\t\t\t<Panel id='main'>\n\t\t\t\t\t\t<PanelHeader left={<Icon24Spinner />}>Загрузка...</PanelHeader>\n\t\t\t  \t\t\t<div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n\t\t\t\t\t\t\t<Spinner size=\"large\" style={{ margin: '20px 0' }} />\n\t\t\t  \t\t\t</div>\n\t\t\t  \t\t</Panel>\n\t\t\t  \t</View>\n\t\t\t);} \n\t\telse {\n\t\t\treturn (\n\t\t\t\t<View \n\t\t\t\t\tonSwipeBack={this.goBack}\n\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\tactivePanel={this.state.activePanel}\n\t\t\t\t>\n\t\t\t\t\t<Panel id=\"main\">\n\t\t\t\t\t  \t<PanelHeader left={<Icon24PlaceOutline />}>{city}</PanelHeader>\n\t\t\t\t\t  \t<div>\n                \t\t\t<h2 className='dayMonth'>Сегодня {time} <span className='fadedText'>{day} {months[month]}</span></h2>\n                \t\t\t<h3 className='temp'>{temperature}°С</h3>\n                \t\t\t<h3 className='feelsLike'>Ощущается как {feels_like}°С</h3>\n                \t\t\t<h3 className='weatherName'>{weather}</h3>\n\t\t\t\t\t\t\t<Group>\n              \t\t\t\t\t<CellButton onClick={ () => this.goForward('more_weather') }>\n                \t\t\t\t\tЕщё о погоде\n              \t\t\t\t\t</CellButton>\n            \t\t\t\t</Group>\n            \t\t\t</div>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel id='more_weather'>\n\t\t\t\t\t\t<PanelHeader\n              \t\t\t\tleft={<PanelHeaderBack  onClick={() => this.goBack()} label={platform === VKCOM ? 'Назад' : undefined} />}\n            \t\t\t>\n              \t\t\t\tТекущая погода\n            \t\t\t</PanelHeader>\n\t\t\t\t\t</Panel>\n\t\t  \t\t</View>\n\t\t\t);}\n\t}\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}