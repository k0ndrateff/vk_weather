{"version":3,"sources":["App.js","DailyForecast.js","index.js"],"names":["App","React","Component","props","goBack","history","state","pop","activePanel","length","bridge","send","setState","goForward","push","error","isLoaded","temperature","city","feels_like","dt","weather","other","forecast","lat","long","then","data","fetch","res","json","result","main","temp","name","description","daily","catch","console","log","message","platform","this","date","Date","day","getDate","month","getMonth","hours","getHours","time","feeling","Math","round","fore_weather","map","onSwipeBack","id","left","className","autoplay","loop","src","style","height","width","onClick","mode","label","undefined","pressure","humidity","wind","deg","speed","clouds","all","display","alignItems","flexDirection","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d03c590b.chunk.js","sourcesContent":["import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { View, Panel, PanelHeader, Spinner, Group, CellButton, PanelHeaderBack, Header, SimpleCell, InfoRow, Tooltip } from '@vkontakte/vkui';\nimport {  Icon28ErrorCircleOutline } from '@vkontakte/icons';\nimport { Player } from '@lottiefiles/react-lottie-player';\nimport DailyForecast from './DailyForecast';\n\nclass App extends React.Component {\n\tconstructor(props) {\n        super(props);\n\t\tthis.state = {\n\t\t\terror: null,\n\t\t\tisLoaded: false,\n\t\t\ttemperature: 0,\n\t\t\tcity: \"\",\n\t\t\tfeels_like: \"\",\n\t\t\tdt: 0,\n\t\t\tweather: \"\",\n\t\t\tother: '',\n\t\t\tforecast: '',\n\t\t\tactivePanel: 'main',\n\t\t\thistory: ['main']\n\t\t  };\n    }\n\n\tcomponentDidMount() {\n\t\tlet lat = 0;\n        let long = 0;\n        bridge\n            .send('VKWebAppGetGeodata')\n            .then(data => {\n                lat = data.lat;\n                long = data.long;\n                fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+ lat +\"&lon=\" + long + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\n                    .then(res => res.json())\n                    .then(\n                    (result) => {\n                        this.setState({\n                            temperature: result.main.temp,\n                            city: result.name,\n                            feels_like: result.main.feels_like,\n                            dt: result.dt,\n                            weather: result.weather[0].description,\n\t\t\t\t\t\t\tother: result\n                        });\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            error\n                    \t});\n                    }\n                )\n\t\t\t\tfetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\"+ lat +\"&lon=\" + long + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\n                    .then(res => res.json())\n                    .then(\n                    (result) => {\n                        this.setState({\n                            isLoaded: true,\n                            forecast: result.daily\n                        });\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            error\n                    \t});\n                    }\n                )\n            })\n            .catch(error => {\n                console.log(error.message);\n            });\n\t}\n\t\n\tgoBack = () => {\n\t\tconst history = [...this.state.history];\n\t\thistory.pop();\n\t\tconst activePanel = history[history.length - 1];\n\t\tif (activePanel === 'main') {\n\t\t  bridge.send('VKWebAppEnableSwipeBack');\n\t\t}\n\t\tthis.setState({ history, activePanel });\n\t}\n\t\n\tgoForward = (activePanel) => {\n\t\tconst history = [...this.state.history];\n\t\thistory.push(activePanel);\n\t\tif (this.state.activePanel === 'main') {\n\t\t  bridge.send('VKWebAppDisableSwipeBack');\n\t\t}\n\t\tthis.setState({ history, activePanel });\n\t}\n\n\trender() {\n\t\tconst { platform } = this.props;\n\t\tconst { error, isLoaded, temperature, city, feels_like, dt, weather, other, forecast } = this.state;\n        const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\n        let date = new Date(dt * 1000);\n        let day = date.getDate();\n        let month = date.getMonth();\n        let hours = date.getHours();\n        let time = 'утром';\n\t\tlet feeling = Math.round(feels_like);\n        if (hours >= 23 || hours <= 4) { time = 'ночью' } else if ( hours >= 18 ) { time = 'вечером' } else if ( hours >= 12) { time = 'днём' }\n\t\tlet fore_weather = forecast.map((day) => {\n\t\t\t<DailyForecast weather={day} />\n\t\t});\n\t\tif (error) {\n\t\t\treturn (\n\t\t\t\t<View \n\t\t\t\t\tonSwipeBack={this.goBack}\n\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\tactivePanel={this.state.activePanel}\n\t\t\t\t>\n\t\t\t\t\t<Panel id='main'>\n\t\t\t\t\t\t<PanelHeader left={<Icon28ErrorCircleOutline />}>Ошибка</PanelHeader>\n\t\t\t\t\t\t<div>{error.message}</div>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t);} \n\t\telse if (!isLoaded) {\n\t\t\treturn (\n\t\t\t\t<View \n\t\t\t\t\tonSwipeBack={this.goBack}\n\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\tactivePanel={this.state.activePanel}\n\t\t\t\t>\n\t\t\t\t\t<Panel id='main'>\n\t\t\t\t\t\t<PanelHeader>Загрузка...</PanelHeader>\n\t\t\t  \t\t\t<div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n\t\t\t\t\t\t  \t<Player\n  \t\t\t\t\t\t\t\tautoplay\n  \t\t\t\t\t\t\t\tloop\n  \t\t\t\t\t\t\t\tsrc=\"https://assets4.lottiefiles.com/packages/lf20_Cemmpu.json\"\n  \t\t\t\t\t\t\t\tstyle={{ height: '300px', width: '300px' }}\n\t\t\t\t\t\t  \t>\n\t\t\t\t\t\t\t</Player>\n\t\t\t  \t\t\t</div>\n\t\t\t  \t\t</Panel>\n\t\t\t  \t</View>\n\t\t\t);} \n\t\telse {\n\t\t\treturn (\n\t\t\t\t<View \n\t\t\t\t\tonSwipeBack={this.goBack}\n\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\tactivePanel={this.state.activePanel}\n\t\t\t\t>\n\t\t\t\t\t<Panel id=\"main\">\n\t\t\t\t\t  \t<PanelHeader>{city}</PanelHeader>\n\t\t\t\t\t  \t<div>\n\t\t\t\t\t\t\t<div className='main-weather'>\n\t\t\t\t\t\t\t\t<h2 className='dayMonth'>Сегодня {time} <span className='fadedText'>{day} {months[month]}</span></h2>\n\t\t\t\t\t\t\t\t<div className='inline-temp'>\n\t\t\t\t\t\t\t\t\t<h3 className='temp'>{temperature}°С</h3>\n\t\t\t\t\t\t\t\t\t<Player\n\t\t\t\t\t\t\t\t\t\tautoplay\n\t\t\t\t\t\t\t\t\t\tloop\n\t\t\t\t\t\t\t\t\t\tsrc='https://assets10.lottiefiles.com/temp/lf20_WtPCZs.json'\n\t\t\t\t\t\t\t\t\t\tstyle={{height: '100px', width: '100px'}}\n\t\t\t\t\t\t\t\t\t></Player>\n\t\t\t\t\t\t\t\t</div>\n                \t\t\t\t<h3 className='feelsLike'>Ощущается как {feeling}°С</h3>\n                \t\t\t\t<h3 className='weatherName'>На улице {weather}</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Group>\n              \t\t\t\t\t<CellButton onClick={ () => this.goForward('more_weather') }>\n                \t\t\t\t\tЕщё о погоде\n              \t\t\t\t\t</CellButton>\n            \t\t\t\t</Group>\n\t\t\t\t\t\t\t<Group>\n\t\t\t\t\t\t\t\t<Header mode='secondary'>Прогноз на завтра</Header>\n\t\t\t\t\t\t\t\t{fore_weather}\n\t\t\t\t\t\t\t</Group>\n            \t\t\t</div>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel id='more_weather'>\n\t\t\t\t\t\t<PanelHeader\n              \t\t\t\tleft={<PanelHeaderBack  onClick={() => this.goBack()} label={platform === 'VKCOM' ? 'Назад' : undefined} />}\n            \t\t\t>\n              \t\t\t\tТекущая погода\n            \t\t\t</PanelHeader>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Город: {city}</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Погода: {weather}</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Температура: {temperature}°С</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Ощущается как: {feels_like}°С</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Давление: {other.main.pressure} гПа</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Влажность: {other.main.humidity}%</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Ветер: {other.wind.deg}° {other.wind.speed} м/с</p>\n\t\t\t\t\t\t\t<p className='weatherInfo'>Облачность: {other.clouds.all}%</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Panel>\n\t\t  \t\t</View>\n\t\t\t);}\n\t}\n}\n\nexport default App;\n\n","import React from 'react';\r\n\r\nclass DailyForecast extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"forecast\">\r\n                <p>{this.props.weather.dt}</p>\r\n                <p>{this.props.weather.temp.day}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyForecast;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}