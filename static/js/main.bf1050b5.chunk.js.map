{"version":3,"sources":["WeatherData.js","App.js","index.js"],"names":["WeatherData","props","state","error","isLoaded","temperature","city","feels_like","dt","lat","long","bridge","send","then","data","fetch","res","json","result","setState","main","temp","name","catch","console","log","message","this","date","Date","time","getHours","getMinutes","substr","className","React","Component","App","activePanel","id","ReactDOM","render","document","getElementById"],"mappings":"wNAwEeA,E,kDApEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,YAAa,EACbC,KAAM,GACNC,WAAY,GACZC,GAAI,GARS,E,qDAYnB,WAAqB,IAAD,OACZC,EAAM,EACNC,EAAO,EACXC,IACKC,KAAK,sBACLC,MAAK,SAAAC,GACFL,EAAMK,EAAKL,IACXC,EAAOI,EAAKJ,KACZK,MAAM,uDAAwDN,EAAK,QAAUC,EAAO,gEAC/EG,MAAK,SAAAG,GAAG,OAAIA,EAAIC,UAChBJ,MACD,SAACK,GACG,EAAKC,SAAS,CACVf,UAAU,EACVC,YAAaa,EAAOE,KAAKC,KACzBf,KAAMY,EAAOI,KACbf,WAAYW,EAAOE,KAAKb,WACxBC,GAAIU,EAAOV,QAGnB,SAACL,GACG,EAAKgB,SAAS,CACVf,UAAU,EACVD,gBAKfoB,OAAM,SAAApB,GACHqB,QAAQC,IAAItB,EAAMuB,c,oBAI5B,WAAU,IAAD,EACwDC,KAAKzB,MAA5DC,EADD,EACCA,MAAOC,EADR,EACQA,SAAUC,EADlB,EACkBA,YAAaC,EAD/B,EAC+BA,KAAMC,EADrC,EACqCA,WAAYC,EADjD,EACiDA,GACpDoB,EAAO,IAAIC,KAAU,IAALrB,GAGhBsB,EAFQF,EAAKG,WAEE,KADL,IAAMH,EAAKI,cACQC,QAAQ,GACzC,OAAI9B,EACK,sEAAcA,EAAMuB,SACjBtB,EAIR,6BACI,wBAAI8B,UAAU,cAAc5B,GAC5B,8DAAWwB,GACX,kGAAiBzB,EAAjB,cACA,oHAAoBE,EAApB,eAPC,wF,GAvDS4B,IAAMC,WCejBC,EAXH,WACX,OACC,kBAAC,IAAD,CAAMC,YAAY,QACX,kBAAC,IAAD,CAAOC,GAAG,QACP,kBAAC,IAAD,6CACA,kBAAC,EAAD,SCNZ5B,IAAOC,KAAK,gBAEZ4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bf1050b5.chunk.js","sourcesContent":["import React from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nclass WeatherData extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          error: null,\r\n          isLoaded: false,\r\n          temperature: 0,\r\n          city: \"\",\r\n          feels_like: \"\",\r\n          dt: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lat = 0;\r\n        let long = 0;\r\n        bridge\r\n            .send('VKWebAppGetGeodata')\r\n            .then(data => {\r\n                lat = data.lat;\r\n                long = data.long;\r\n                fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+ lat +\"&lon=\" + long + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\r\n                    .then(res => res.json())\r\n                    .then(\r\n                    (result) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            temperature: result.main.temp,\r\n                            city: result.name,\r\n                            feels_like: result.main.feels_like,\r\n                            dt: result.dt\r\n                        });\r\n                    },\r\n                    (error) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error\r\n                    });\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n      }\r\n    \r\n      render() {\r\n        const { error, isLoaded, temperature, city, feels_like, dt } = this.state;\r\n        let date = new Date(dt * 1000);\r\n        let hours = date.getHours();\r\n        let minutes = \"0\" + date.getMinutes();\r\n        let time = hours + ':' + minutes.substr(-2);\r\n        if (error) {\r\n          return <div>Ошибка: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n          return <div>Загрузка...</div>;\r\n        } else {\r\n          return (\r\n            <div>\r\n                <h1 className='cityHeader'>{city}</h1>\r\n                <p>Время: {time}</p>\r\n                <p>Температура: {temperature}°С</p>\r\n                <p>Чувствуется как {feels_like}°С</p>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n}\r\n\r\nexport default WeatherData;","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { View, Panel, PanelHeader } from '@vkontakte/vkui';\nimport WeatherData from './WeatherData';\n\n\nconst App = () => {\n\treturn (\n\t\t<View activePanel=\"main\">\n        \t<Panel id=\"main\">\n          \t\t<PanelHeader>Погода</PanelHeader>\n          \t\t<WeatherData></WeatherData>\n        \t</Panel>\n      </View>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}