{"version":3,"sources":["WeatherData.js","App.js","index.js"],"names":["lat","lon","bridge","send","then","data","long","catch","error","console","log","message","WeatherData","props","state","isLoaded","temperature","fetch","res","json","result","setState","current","temp","this","React","Component","App","activePanel","id","header","mode","ReactDOM","render","document","getElementById"],"mappings":"wNAGAA,IAAM,EACNC,IAAM,EAENC,IACaC,KAAK,sBACLC,MAAK,SAAAC,GACFL,IAAMK,EAAKL,IACXM,KAAOD,EAAKC,QAEfC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EAAMG,Y,IA8CnBC,E,kDA1CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXN,MAAO,KACPO,UAAU,EACVC,YAAa,GALA,E,qDASnB,WAAqB,IAAD,OAChBC,MAAM,uDAAyDjB,IAAM,QAAUM,KAAO,6EACnFF,MAAK,SAAAc,GAAG,OAAIA,EAAIC,UAChBf,MACC,SAACgB,GACC,EAAKC,SAAS,CACZN,UAAU,EACVC,YAAaI,EAAOE,QAAQC,UAGhC,SAACf,GACC,EAAKa,SAAS,CACZN,UAAU,EACVP,e,oBAMV,WAAU,IAAD,EACkCgB,KAAKV,MAAtCN,EADD,EACCA,MAAOO,EADR,EACQA,SAAUC,EADlB,EACkBA,YACzB,OAAIR,EACK,sEAAcA,EAAMG,SACjBI,EAIR,4BAAKC,GAHA,wF,GAlCSS,IAAMC,WCIjBC,EAbH,WACX,OACC,kBAAC,IAAD,CAAMC,YAAY,QACX,kBAAC,IAAD,CAAOC,GAAG,QACP,kBAAC,IAAD,6CACA,kBAAC,IAAD,CAAOC,OAAQ,kBAAC,IAAD,CAAQC,KAAK,aAAb,wEACb,kBAAC,IAAD,KAAM,kBAAC,EAAD,MAAN,yDCPd7B,IAAOC,KAAK,gBAEZ6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.08329a3c.chunk.js","sourcesContent":["import React from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nlat = 0;\r\nlon = 0;\r\n\r\nbridge\r\n            .send('VKWebAppGetGeodata')\r\n            .then(data => {\r\n                lat = data.lat;\r\n                long = data.long;\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message);\r\n        });\r\n\r\nclass WeatherData extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          error: null,\r\n          isLoaded: false,\r\n          temperature: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + lat + \"&lon=\" + long + \"&exclude=hourly,daily&units=metric&appid=e937bb61987a79d09b7604a3375a9941\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                temperature: result.current.temp\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n    \r\n      render() {\r\n        const { error, isLoaded, temperature } = this.state;\r\n        if (error) {\r\n          return <div>Ошибка: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n          return <div>Загрузка...</div>;\r\n        } else {\r\n          return (\r\n            <h1>{temperature}</h1>\r\n          );\r\n        }\r\n      }\r\n}\r\n\r\nexport default WeatherData;","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { View, Panel, PanelHeader, Group, Cell, Header } from '@vkontakte/vkui';\nimport WeatherData from './WeatherData';\n\n\nconst App = () => {\n\treturn (\n\t\t<View activePanel=\"main\">\n        \t<Panel id=\"main\">\n          \t\t<PanelHeader>Погода</PanelHeader>\n          \t\t<Group header={<Header mode=\"secondary\">Температура:</Header>}>\n            \t\t<Cell><WeatherData></WeatherData> градусов</Cell>\n          \t\t</Group>\n        \t</Panel>\n      </View>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}