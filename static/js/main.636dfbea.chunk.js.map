{"version":3,"sources":["App.js","index.js"],"names":["App","props","goBack","history","state","pop","activePanel","length","bridge","send","setState","goForward","push","toNormalDate","dt","date","Date","getDate","getMonth","error","isLoaded","weather","forecast","lat","long","then","data","error_type","fetch","res","json","result","daily","slice","catch","this","onSwipeBack","id","message","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gOA6IeA,E,kDAvIX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA6DVC,OAAS,WACX,IAAMC,EAAO,YAAO,EAAKC,MAAMD,SAC/BA,EAAQE,MACR,IAAMC,EAAcH,EAAQA,EAAQI,OAAS,GACzB,SAAhBD,GACFE,IAAOC,KAAK,2BAEd,EAAKC,SAAS,CAAEP,UAASG,iBArEJ,EAwEtBK,UAAY,SAACL,GACZ,IAAMH,EAAO,YAAO,EAAKC,MAAMD,SAC/BA,EAAQS,KAAKN,GACkB,SAA3B,EAAKF,MAAME,aACbE,IAAOC,KAAK,4BAEd,EAAKC,SAAS,CAAEP,UAASG,iBA9EJ,EAiFnBO,aAAe,SAACC,GACZ,IACIC,EAAO,IAAIC,KAAU,IAALF,GAGpB,OAFUC,EAAKE,UAEF,IAJE,CAAC,uCAAU,6CAAW,iCAAS,uCAAU,qBAAO,2BAAQ,2BAAQ,6CAAW,mDAAY,6CAAW,uCAAU,8CAG/GF,EAAKG,aAnFjB,EAAKd,MAAQ,CACTe,MAAO,KACPC,UAAU,EACVC,QAAS,GACTC,SAAU,GACVhB,YAAa,OACbH,QAAS,CAAC,SARC,E,qDAYnB,WAAqB,IAAD,OACZoB,EAAM,EACNC,EAAO,EACXhB,IAAOC,KAAK,sBACHgB,MAAK,SAAAC,GACqB,gBAAnBA,EAAKC,YACLJ,EAAM,GACNC,EAAO,KAGPD,EAAMG,EAAKH,IACXC,EAAOE,EAAKF,MAEhBI,MAAM,uDAAwDL,EAAK,QAAUC,EAAO,gEAC/EC,MAAK,SAAAI,GAAG,OAAIA,EAAIC,UAChBL,MAAK,SAACM,GACH,EAAKrB,SAAS,CACVW,QAASU,OAGjB,SAACZ,GACG,EAAKT,SAAS,CACVU,UAAU,EACVD,aAGZS,MAAM,uDAAwDL,EAAK,QAAUC,EAAO,gEAC/EC,MAAK,SAAAI,GAAG,OAAIA,EAAIC,UAChBL,MAAK,SAACM,GACH,EAAKrB,SAAS,CACVU,UAAU,EACVE,SAAUS,EAAOC,MAAMC,MAAM,QAGrC,SAACd,GACG,EAAKT,SAAS,CACVU,UAAU,EACVD,gBAKfe,OAAM,SAAAf,GACH,EAAKT,SAAS,CACVU,UAAU,EACVD,e,oBAgCpB,WAAU,IAAD,EACgCgB,KAAK/B,MAAlCe,EADH,EACGA,MAAOC,EADV,EACUA,SAAUC,EADpB,EACoBA,QACzB,OAAIF,EAEI,kBAAC,IAAD,CACIiB,YAAaD,KAAKjC,OAClBC,QAASgC,KAAK/B,MAAMD,QACpBG,YAAa6B,KAAK/B,MAAME,aAExB,kBAAC,IAAD,CAAO+B,GAAG,QACN,kBAAC,IAAD,6CACA,6BAAMlB,EAAMmB,WAIlBlB,EAcF,kBAAC,IAAD,CACXgB,YAAaD,KAAKjC,OAClBC,QAASgC,KAAK/B,MAAMD,QACpBG,YAAa6B,KAAK/B,MAAME,aAET,kBAAC,IAAD,CAAO+B,GAAG,QACN,yBAAKE,UAAU,gBACX,0EAAa1B,aAAaQ,EAAQP,QAnB9C,kBAAC,IAAD,CACIsB,YAAaD,KAAKjC,OAClBC,QAASgC,KAAK/B,MAAMD,QACpBG,YAAa6B,KAAK/B,MAAME,aAExB,kBAAC,IAAD,CAAO+B,GAAG,QACN,kBAAC,IAAD,kE,GAjHNG,IAAMC,WCCxBjC,IAAOC,KAAK,gBAEZiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.636dfbea.chunk.js","sourcesContent":["import React from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { Panel, View, PanelHeader } from '@vkontakte/vkui';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            weather: '',\r\n            forecast: '',\r\n            activePanel: 'main',\r\n            history: ['main']\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lat = 0;\r\n        let long = 0;\r\n        bridge.send('VKWebAppGetGeodata')\r\n                .then(data => {\r\n                    if (data.error_type == 'client_error') {\r\n                        lat = 30;\r\n                        long = 50;\r\n                    }\r\n                    else {\r\n                        lat = data.lat;\r\n                        long = data.long;\r\n                    }\r\n                    fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+ lat +\"&lon=\" + long + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\r\n                        .then(res => res.json())\r\n                        .then((result) => {\r\n                            this.setState({ \r\n                                weather: result\r\n                            });\r\n                        },\r\n                        (error) => {\r\n                            this.setState({\r\n                                isLoaded: true,\r\n                                error\r\n                            });\r\n                        })\r\n                    fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\"+ lat +\"&lon=\" + long + \"&units=metric&lang=ru&appid=e937bb61987a79d09b7604a3375a9941\")\r\n                        .then(res => res.json())\r\n                        .then((result) => {\r\n                            this.setState({\r\n                                isLoaded: true,\r\n                                forecast: result.daily.slice(1)\r\n                            });\r\n                        },\r\n                        (error) => {\r\n                            this.setState({\r\n                                isLoaded: true,\r\n                                error\r\n                            });\r\n                        }\r\n                    )\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ \r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                });\r\n    }\r\n\r\n    goBack = () => {\r\n\t\tconst history = [...this.state.history];\r\n\t\thistory.pop();\r\n\t\tconst activePanel = history[history.length - 1];\r\n\t\tif (activePanel === 'main') {\r\n\t\t  bridge.send('VKWebAppEnableSwipeBack');\r\n\t\t}\r\n\t\tthis.setState({ history, activePanel });\r\n\t}\r\n\t\r\n\tgoForward = (activePanel) => {\r\n\t\tconst history = [...this.state.history];\r\n\t\thistory.push(activePanel);\r\n\t\tif (this.state.activePanel === 'main') {\r\n\t\t  bridge.send('VKWebAppDisableSwipeBack');\r\n\t\t}\r\n\t\tthis.setState({ history, activePanel });\r\n\t}\r\n\r\n    toNormalDate = (dt) => {\r\n        const months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\r\n        let date = new Date(dt * 1000);\r\n        let day = date.getDate();\r\n        let month = date.getMonth();\r\n        return day + ' ' + months[month];\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, weather } = this.state;\r\n        if (error) {\r\n            return (\r\n                <View\r\n                    onSwipeBack={this.goBack}\r\n                    history={this.state.history}\r\n                    activePanel={this.state.activePanel}\r\n                >\r\n                    <Panel id='main'>\r\n                        <PanelHeader>Ошибка</PanelHeader>\r\n                        <div>{error.message}</div>\r\n                    </Panel>\r\n                </View>\r\n            );}\r\n        else if (!isLoaded) {\r\n            return (\r\n                <View\r\n                    onSwipeBack={this.goBack}\r\n                    history={this.state.history}\r\n                    activePanel={this.state.activePanel}\r\n                >\r\n                    <Panel id='main'>\r\n                        <PanelHeader>Загрузка...</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n            );}\r\n        else {\r\n            return (\r\n                <View \r\n\t\t\t\t\tonSwipeBack={this.goBack}\r\n\t\t\t\t\thistory={this.state.history}\r\n\t\t\t\t\tactivePanel={this.state.activePanel}\r\n\t\t\t\t>\r\n                    <Panel id='main'>\r\n                        <div className='mainGradient'>\r\n                            <h1>Сегодня {toNormalDate(weather.dt)}</h1>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}